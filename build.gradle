buildscript {
	repositories {
		maven {
			url = uri("https://plugins.gradle.org/m2/")
		}
	}
	dependencies {
		classpath("com.github.jengelman.gradle.plugins:shadow:6.1.0")
	}
}

plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}
apply plugin: 'com.github.johnrengelman.shadow'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

configurations {
	shadow.extendsFrom implementation
}
dependencies {
	// To change the versions see the gradle.properties file
	implementation 'org.json:json:20230227'
	shadow 'org.json:json:20230227'
	minecraft "net.minecraft:minecraft:${project.minecraft_version}:sources"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	//modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc:fabric-loader:0.14.9"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

shadowJar {
	classifier = "shadow"
	configurations = [project.configurations.shadow]
	mergeServiceFiles()
}

remapJar {
	dependsOn shadowJar
	input = shadowJar.archiveFile.get().getAsFile()
	addNestedDependencies = true
	classifier = 'deobf'
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

assemble {
	dependsOn remapJar
}

jar.finalizedBy shadowJar

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
